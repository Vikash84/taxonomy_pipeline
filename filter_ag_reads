#!/bin/bash

#

file_base=$1

log=${file_base}.pipeline.log


# bracket to redirect all stdout output to log file
{

# this is a somewhat kludgey way to build the pipeline on the fly
if [ "dont_do_this_part_already_done" = "XXX" ]
then

   # just a place holder
   echo "bla bla bla " > /dev/null

# just keep moving this else down to keep adding to what will get done
else

   f1=${file_base}_R1_fu.fastq
   f2=${file_base}_R2_fu.fastq

   echo "*****************************************************"
   echo "filtering out A. gambiae seqs from files $f1 and $f2 "
   echo "*****************************************************"

	# this is a database of the  boa constrictor genome assembly
	# from the "assemblathon 2" assembly "snake_1C"
	btindex=/home/databases/mosquito/Ag/Ag_genome
 
   num_cpu=12
   output_suffix=ag_genome

   # unpaired
   echo "bowtie2 -x $btindex --local -q -U $f1 --sensitive --score-min C,60,0 --time --al ${f1}.${output_suffix}_bt_hits.fastq --un ${f1}.${output_suffix}_bt_misses.fastq -p $num_cpu -S ${f1}.${output_suffix}_bt.sam 2> ${f1}.${output_suffix}_bt.log"
   bowtie2 -x $btindex --local -q -U $f1 --sensitive --score-min C,60,0 --time --al ${f1}.${output_suffix}_bt_hits.fastq --un ${f1}.${output_suffix}_bt_misses.fastq -p $num_cpu -S ${f1}.${output_suffix}_bt.sam 2> ${f1}.${output_suffix}_bt.log

   fasta_from_sam -f $f1 -r ${f1}.${output_suffix}_bt.sam > ${file_base}_R1_fuh1.fastq

   reconcile_read2_file ${file_base}_R1_fuh1.fastq ${file_base}_R2_fu.fastq f2 > ${file_base}_R2_fuh1.fastq

	f2=${file_base}_R2_fuh1.fastq
   echo "bowtie2 -x $btindex --local -q -U $f2 --sensitive --score-min C,60,0 --time --al ${f2}.${output_suffix}_bt_hits.fastq --un ${f2}.${output_suffix}_bt_misses.fastq -p $num_cpu -S ${f2}.${output_suffix}_bt.sam 2> ${f2}.${output_suffix}_bt.log"
   bowtie2 -x $btindex --local -q -U $f2 --sensitive --score-min C,60,0 --time --al ${f2}.${output_suffix}_bt_hits.fastq --un ${f2}.${output_suffix}_bt_misses.fastq -p $num_cpu -S ${f2}.${output_suffix}_bt.sam 2> ${f2}.${output_suffix}_bt.log

   f2_sam=${file_base}_R2_fuh1.fastq.${output_suffix}_bt.sam

   fasta_from_sam -f ${file_base}_R2_fuh1.fastq -r $f2_sam > ${file_base}_R2_fuh.fastq

   reconcile_read2_file ${file_base}_R2_fuh.fastq ${file_base}_R1_fuh1.fastq > ${file_base}_R1_fuh.fastq

fi

} 2>&1  | tee -a $log  # output tee'd to a logfile



